<?xml version="1.0" encoding="UTF-8"?>
<project name="phing-drupal" default="load-properties" phingVersion="2.9.1">

  <target name="init" depends="load-properties" unless="project.initialized" hidden="true">
    <property name="project.initialized" value="true" />
  </target>

  <target name="load-properties" hidden="true">
    <php function="dirname" returnProperty="phing.dir">
      <param value="${phing.file}" />
    </php>
    <property name="projectroot.dir" value="${phing.dir}" />
    <property name="properties.file" value="build.properties" />
    <property file="${properties.file}" override="true" />
  </target>

  <target name="load-keys" depends="init" description="Load SSH keys from properties configuration.">
    <exec command="eval `ssh-agent -s`" passthru="true" logoutput="true" checkreturn="true" />
    <foreach list="${ssh.keys}" param="key" target="load-key" delimiter="," />
  </target>

  <target name="load-key" depends="init" description="Load a single SSH key.">
    <exec command="ssh-add ${key}" passthru="true" logoutput="true" checkreturn="true" />
    <echo>Added ssh key ${key}</echo>
  </target>

  <target name="clone" depends="init" description="Clone git project using a tag.">
    <exec command="git clone ${repository.url} ${release.dir}/${dir}"
      passthru="true" logoutput="true" checkreturn="true"/>

    <if><isset property="tag" />
      <then>
        <exec command="git checkout tags/${tag}" dir="${release.dir}/${dir}"
          passthru="true" logoutput="true" checkreturn="true"/>
        <echo>Cloned tags/${tag} from ${repository.url} into ${release.dir}/${dir}</echo>
      </then>
   </if>

    <if><isset property="branch" />
      <then>
        <exec command="git checkout ${branch}" dir="${release.dir}/${dir}"
          passthru="true" logoutput="true" checkreturn="true"/>
        <echo>Cloned branch ${branch} from ${repository.url} into ${release.dir}/${dir}</echo>
      </then>
   </if>

  </target>

  <target name="rsync-files" depends="init" description="Rsync the project files directories.">
    <mkdir dir="${release.dir}/${destination}/${files.dir}" />
    <exec command="rsync -av --progress ${release.dir}/${source}/${files.dir}/ ${release.dir}/${destination}/${files.dir}/"
     passthru="true" logoutput="true" checkreturn="true" />
     <echo>Files directories rsynched, from ${release.dir}/${source}/${files.dir}/ to ${release.dir}/${destination}/${files.dir}/</echo>
  </target>

  <target name="release-switch" depends="init" description="Switch to a specified release directory.">
    <delete file="${release.current.dir}" />
    <symlink target="${release.dir}/${dir}/${docroot.dir}" link="${release.current.dir}" />
    <echo>Switched to ${dir} release directory.</echo>
  </target>

  <target name="exec" depends="init" description="A wrapper target for Phing commands in a project release directory.">
    <exec command="phing ${command}" dir="${release.dir}/${dir}"
      passthru="true" logoutput="true" checkreturn="true" />
  </target>

  <!--
    Usage: phing deploy:prod -DdirOld=v1.0.0 -DdirNew=v1.0.1 -Dtag=v1.0.1
  -->
  <target name="deploy:prod" depends="init, deploy-build:prod, deploy-release"
    description="Deploy a new release into production." />

  <!--
    Usage: phing deploy-build:prod -DdirOld=v1.0.0 -DdirNew=v1.0.1 -Dtag=v1.0.1 [-Ddry-run]
  -->
  <target name="deploy-build:prod" depends="init" description="Deploy a new build without releasing into production.">

    <property name="dir" value="${dirNew}" override="true" />
    <phingcall target="clone" />

    <phingcall target="exec">
      <property name="command" value="install:prod" />
    </phingcall>

    <if>
      <not><isset property="dry-run" /></not>
      <then>
        <phingcall target="exec">
          <property name="command" value="permissions:prod" />
        </phingcall>
      </then>
   </if>

    <property name="source" value="${dirOld}" override="true" />
    <property name="destination" value="${dirNew}" override="true" />
    <phingcall target="rsync-files" />

    <if>
      <not><isset property="dry-run" /></not>
      <then>
        <phingcall target="exec">
          <property name="command" value="permissions-project:prod" />
        </phingcall>
      </then>
   </if>

    <property name="dir" value="${dirOld}" override="true" />
    <phingcall target="exec">
      <property name="command" value="db-export" />
    </phingcall>
  </target>

  <!--
    Usage: phing deploy-release -DdirOld=v1.0.0 -DdirNew=v1.0.1
  -->
  <target name="deploy-release" depends="init" description="Release a new build into production.">
    <property name="dir" value="${dirOld}" override="true"/>
    <phingcall target="exec">
      <property name="command" value="offline" />
    </phingcall>

    <property name="dir" value="${dirNew}" override="true"/>
    <phingcall target="release-switch" />

    <phingcall target="exec">
      <property name="command" value="db-update" />
    </phingcall>

    <phingcall target="exec">
      <property name="command" value="online" />
    </phingcall>
  </target>


  <!--
    Usage: phing deploy-first:prod -Ddir=v1.0.0 -Dtag=v1.0.0
  -->
  <target name="deploy-first:prod" depends="init" description="Deploy a release for the first time into production.">
    <phingcall target="clone" />

    <phingcall target="exec">
      <property name="command" value="settings:prod" />
    </phingcall>

    <phingcall target="exec">
      <property name="command" value="install:prod" />
    </phingcall>

    <phingcall target="exec">
      <property name="command" value="permissions:prod" />
    </phingcall>

    <phingcall target="exec">
      <property name="command" value="permissions-project:prod" />
    </phingcall>

    <phingcall target="release-switch" />

    <phingcall target="exec">
      <property name="command" value="db-update" />
    </phingcall>
  </target>

</project>
